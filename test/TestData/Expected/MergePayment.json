{
  "ProcedureName": "MergePayment",
  "EtlSql": "BEGIN\n    INSERT INTO dbo.Currency (IsoCode)\n    SELECT Currency\n    FROM   #Payment\n    EXCEPT\n    SELECT IsoCode\n    FROM   dbo.Currency;\n    MERGE INTO dbo.Payment\n     AS Target\n    USING (SELECT Payment.PaymentId,\n                  Payment.Sum,\n                  Currency.CurrencyId,\n                  Payment.BatchDt AS ModifyDt\n           FROM   #Payment AS Payment\n                  INNER JOIN\n                  dbo.Currency\n                  ON Currency.IsoCode = Payment.Currency) AS Source ON Source.PaymentId = Target.PaymentId\n    WHEN NOT MATCHED THEN INSERT (PaymentId, Sum, CurrencyId, ModifyDt) VALUES (Source.PaymentId, Source.Sum, Source.CurrencyId, Source.ModifyDt)\n    WHEN MATCHED THEN UPDATE \n    SET Target.Sum        = Source.Sum,\n        Target.CurrencyId = Source.CurrencyId;\n    DELETE Target\n    FROM   dbo.PaymentItem AS Target\n    WHERE  Target.PaymentId IN (SELECT ModifiedPayment.PaymentId\n                                FROM   #Payment AS ModifiedPayment);\n    INSERT INTO dbo.PaymentItem (PaymentId, Article, Quantity, Price)\n    SELECT Payment.PaymentId,\n           PaymentItem.Article,\n           PaymentItem.Quantity,\n           PaymentItem.Price\n    FROM   #PaymentItem AS PaymentItem\n           INNER JOIN\n           #Payment AS Payment\n           ON Payment.BatchDt = PaymentItem.BatchDt\n              AND Payment.BatchRowId = PaymentItem.ParentRowId;\nEND",
  "TableDefinitions": [
    {
      "StageTableName": "stage.Payment",
      "TempTableName": "#Payment",
      "IsMain": true,
      "SelectStatement": "SELECT TOP (1005) WITH TIES [BatchDt], [BatchRowId], [PaymentId], [Sum], [Currency]\nFROM stage.Payment WHERE @Min \u003C BatchDt\nORDER BY BatchDt ASC;",
      "CreateTempTableStatement": "CREATE TABLE #Payment (    [BatchDt] datetime2 NOT NULL,     [BatchRowId] bigint NOT NULL,     [PaymentId] uniqueidentifier NOT NULL,     [Sum] decimal NOT NULL,     [Currency] char(3) NOT NULL);",
      "SelectBatchStatement": "SELECT MIN(BatchDt) AS MinValue, MAX(BatchDt) AS MaxValue FROM #Payment",
      "Columns": [
        {
          "Name": "BatchDt",
          "DataType": "datetime2",
          "IsNullable": false,
          "IsMax": false,
          "Length": 0,
          "Precision": 0
        },
        {
          "Name": "BatchRowId",
          "DataType": "bigint",
          "IsNullable": false,
          "IsMax": false,
          "Length": 0,
          "Precision": 0
        },
        {
          "Name": "PaymentId",
          "DataType": "uniqueidentifier",
          "IsNullable": false,
          "IsMax": false,
          "Length": 0,
          "Precision": 0
        },
        {
          "Name": "Sum",
          "DataType": "decimal",
          "IsNullable": false,
          "IsMax": false,
          "Length": 0,
          "Precision": 20
        },
        {
          "Name": "Currency",
          "DataType": "char",
          "IsNullable": false,
          "IsMax": false,
          "Length": 3,
          "Precision": 0
        }
      ]
    },
    {
      "StageTableName": "stage.PaymentItem",
      "TempTableName": "#PaymentItem",
      "IsMain": false,
      "SelectStatement": "SELECT [BatchDt], [BatchRowId], [ParentRowId], [Article], [Quantity], [Price] FROM stage.PaymentItem WHERE BatchDt BETWEEN @Min AND @Max;",
      "CreateTempTableStatement": "CREATE TABLE #PaymentItem (    [BatchDt] datetime2 NOT NULL,     [BatchRowId] bigint NOT NULL,     [ParentRowId] bigint NOT NULL,     [Article] varchar(50) NOT NULL,     [Quantity] int NOT NULL,     [Price] decimal NOT NULL);",
      "SelectBatchStatement": "SELECT MIN(BatchDt) AS MinValue, MAX(BatchDt) AS MaxValue FROM #PaymentItem",
      "Columns": [
        {
          "Name": "BatchDt",
          "DataType": "datetime2",
          "IsNullable": false,
          "IsMax": false,
          "Length": 0,
          "Precision": 0
        },
        {
          "Name": "BatchRowId",
          "DataType": "bigint",
          "IsNullable": false,
          "IsMax": false,
          "Length": 0,
          "Precision": 0
        },
        {
          "Name": "ParentRowId",
          "DataType": "bigint",
          "IsNullable": false,
          "IsMax": false,
          "Length": 0,
          "Precision": 0
        },
        {
          "Name": "Article",
          "DataType": "varchar",
          "IsNullable": false,
          "IsMax": false,
          "Length": 50,
          "Precision": 0
        },
        {
          "Name": "Quantity",
          "DataType": "int",
          "IsNullable": false,
          "IsMax": false,
          "Length": 0,
          "Precision": 0
        },
        {
          "Name": "Price",
          "DataType": "decimal",
          "IsNullable": false,
          "IsMax": false,
          "Length": 0,
          "Precision": 18
        }
      ]
    }
  ]
}